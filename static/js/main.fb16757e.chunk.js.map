{"version":3,"sources":["constants/vars.js","api/trips.js","context/createDataContext.js","context/TripsContext.js","components/Menu.js","components/Logo.js","constants/colors.js","components/Trigger.js","components/Avatar.js","components/Layout.js","components/MapView.js","hooks/usePathLine.js","components/InfoTrip.js","components/Modal.js","components/StopErrorMsg.js","constants/profile.js","screens/Home/Home.js","screens/Home/index.js","hooks/useStopInfo.js","screens/Spinner.js","screens/ErrorScreen.js","containers/HomeContainer.js","App.js","index.js"],"names":["ARC","lat","lng","axios","create","baseURL","reducer","actions","initialState","Context","React","createContext","Provider","children","useReducer","state","dispatch","boundActions","key","value","createDataContext","error","loading","action","type","results","payload","getTripsList","a","api","get","response","data","Item","AntdMenu","Menu","trips","selectTrip","theme","mode","defaultSelectedKeys","map","trip","i","driverName","onClick","CarOutlined","description","Logo","styled","div","Wrap","span","colors","Trigger","collapsed","rest","MenuUnfoldOutlined","MenuFoldOutlined","AvatarWrap","Avatar","img","link","initial","href","target","rel","src","Main","Layout","Header","Aside","Sider","AsideContent","Content","props","Container","GoogleMap","zoom","mapTypeControl","streetViewControl","fullscreenControl","GoogleApiWrapper","apiKey","process","google","activeTrip","handleMarkerClick","useState","path","setPath","initialPath","origin","point","_latitude","_longitude","destination","stops","length","filter","rawStop","undefined","stop","stopCoords","mergeCoords","usePathLine","getPathCoords","useEffect","renderCenter","center","initialCenter","strokeColor","strokeOpacity","strokeWeight","position","id","InfoTrip","address","status","moment","startTime","format","endTime","Price","paid","Modal","visible","onCancel","title","PushpinOutlined","footer","UserSwitchOutlined","userName","HomeOutlined","ClockCircleOutlined","stopTime","TagOutlined","price","StopErrorMsg","msg","message","config","top","duration","maxCount","rtl","Home","setCollapsed","setActiveTrip","stopInfo","setstopInfo","result","setResult","errorMessage","setErrorMessage","stopId","useStopInfo","getStopInfo","clearErrorMessage","width","collapsedWidth","trigger","collapsible","profile","Spinner","LoadingOutlined","spin","ErrorScreen","ApiOutlined","style","fontSize","HomeContainer","useContext","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fb16757e.chunk.js","sourcesContent":["const TRIPS_API_URI = 'https://europe-west1-metropolis-fe-test.cloudfunctions.net/api';\nconst ERROR_MSG = 'your device is about to explote, run 4 ur life!';\nconst STOP_FAIL = 'ups, there is no info for this stop'\nconst ARC = { lat: 41.3910524, lng: 2.1806449 };\n\nexport {\n  TRIPS_API_URI,\n  ERROR_MSG,\n  STOP_FAIL,\n  ARC\n};\n","import axios from 'axios';\nimport { TRIPS_API_URI } from 'constants/vars'\n\nexport default axios.create({\n  baseURL: TRIPS_API_URI\n});","import React, { useReducer } from 'react';\n\nexport default (reducer, actions, initialState) => {\n  const Context = React.createContext();\n\n  const Provider = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    const boundActions = {};\n    for (const key in actions) {\n      boundActions[key] = actions[key](dispatch);\n    }\n\n    return <Context.Provider value={{ state, ...boundActions }}>{children}</Context.Provider>;\n  };\n\n  return { Context, Provider };\n};","import createDataContext from './createDataContext';\nimport api from 'api/trips';\nimport { ERROR_MSG } from 'constants/vars';\n\nconst TripsReducer = (\n  state = {\n    error: null,\n    loading: true\n  },\n  action\n) => {\n  switch (action.type) {\n    case 'get_trips':\n      return { ...state, loading: false, results: action.payload };\n    case 'get_trips_fail':\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nconst getTripsList = (dispatch) => {\n  return async () => {\n    try {\n      const response = await api.get('/trips');\n      dispatch({ type: 'get_trips', payload: response.data });\n    } catch (error) {\n      dispatch({ type: 'get_trips_fail', payload: ERROR_MSG });\n    }\n  };\n};\n\n\nexport const { Context, Provider } = createDataContext(\n  TripsReducer,\n  { getTripsList },\n  []\n);\n","import React from 'react';\nimport { Menu as AntdMenu } from 'antd';\nimport { CarOutlined } from '@ant-design/icons';\n\nconst { Item } = AntdMenu;\n\nexport default function Menu({ trips, selectTrip }) {\n  if (!trips) return null;\n\n  const renderTripList = () => {\n    return trips.map((trip, i) => (\n      <Item key={trip.driverName + i} onClick={() => selectTrip(trip)}>\n        <span>\n          <CarOutlined />\n          <span>{trip.description}</span>\n        </span>\n      </Item>\n    ));\n  };\n\n  return (\n    <AntdMenu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n      {renderTripList()}\n    </AntdMenu>\n  );\n}\n","import styled from 'styled-components';\n\nconst Logo = styled.div`\n  height: 2rem;\n  border: 1px solid white;\n  color: white;\n  margin: 1rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  letter-spacing: .5rem;\n`;\n\nexport default Logo;\n","export default {\n  blue: '#1890ff',\n  walter: '#fff',\n  darkBlue: '#00152A',\n  jack: '#000c17',\n  russian: '#ff0000'\n}","import React from 'react';\nimport { MenuUnfoldOutlined, MenuFoldOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport colors from 'constants/colors';\n\nconst Wrap = styled.span`\n  font-size: 1.2rem;\n  line-height: 4rem;\n  cursor: pointer;\n  transition: color 0.3s;\n  :hover {\n    color: ${colors.blue};\n  }\n`;\n\nexport default function Trigger({ collapsed, ...rest }) {\n  return (\n    <Wrap {...rest}>\n      {collapsed ? <MenuUnfoldOutlined /> : <MenuFoldOutlined />}\n    </Wrap>\n  );\n}\n","import React from 'react';\nimport { Avatar as AntAvatar } from 'antd';\nimport styled from 'styled-components';\n\nconst AvatarWrap = styled.div`\n  @media (max-width: 414px) {\n    display: ${({ collapsed }) => (collapsed ? 'block' : 'none')};\n  }\n`;\n\nfunction Avatar({ img, link, initial = 'A', collapsed = false }) {\n  return (\n    <AvatarWrap collapsed={collapsed}>\n      {!img && !link ? (\n        <AntAvatar>{initial}</AntAvatar>\n      ) : (\n        <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n          <AntAvatar src={img} />\n        </a>\n      )}\n    </AvatarWrap>\n  );\n}\n\nexport default Avatar;\n","import React from 'react';\nimport styled from 'styled-components';\nimport colors from 'constants/colors';\nimport { Layout } from 'antd';\n\nconst Main = styled(Layout)`\n  min-height: 100vh;\n`;\n\nconst Header = styled(Layout.Header)`\n  background: ${colors.walter};\n  padding: 0;\n  display: flex;\n  justify-content: space-between;\n  padding: 0 1.5rem;\n  align-items: center;\n`;\n\nconst Aside = Layout.Sider;\n\nconst AsideContent = styled.div`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  overflow-y: scroll;\n`;\n\nconst Content = styled((props) => <Layout.Content {...props} />)`\n  background: ${colors.walter};\n  overflow: hidden;\n  display: flex;\n  align-items: flex-start;\n  justify-content: center;\n  position: relative;\n  @media (max-width: 414px) {\n    display: ${({ collapsed }) => (collapsed ? 'block' : 'none')};\n  }\n`;\n\nexport { Main, Header, Layout, Aside,AsideContent, Content };\n","import React, { useEffect } from 'react';\nimport { Map, GoogleApiWrapper, Marker, Polyline } from 'google-maps-react';\nimport styled from 'styled-components';\nimport { ARC } from 'constants/vars';\nimport colors from 'constants/colors';\nimport usePathLine from 'hooks/usePathLine';\n\nfunction MapView({ google, activeTrip, handleMarkerClick }) {\n  const [getPathCoords, path] = usePathLine();\n\n  useEffect(() => {\n    if (!activeTrip) return;\n    getPathCoords(activeTrip);\n  }, [activeTrip]);\n\n  const renderStopMarkers = () => {\n    if (!activeTrip || activeTrip.stops.length === 1) return null;\n    return activeTrip.stops.map((stop) => (\n      <Marker\n        onClick={() => handleMarkerClick(stop.id)}\n        key={stop.id}\n        position={{ lat: stop.point._latitude, lng: stop.point._longitude }}\n      />\n    ));\n  };\n\n  const renderCenter = activeTrip\n    ? {\n        lat: activeTrip.destination.point._latitude,\n        lng: activeTrip.destination.point._longitude\n      }\n    : ARC;\n\n  return (\n    <Container>\n      {activeTrip ? (\n        <GoogleMap google={google} center={renderCenter} initialCenter={ARC}>\n          <Polyline\n            path={path}\n            strokeColor={colors.russian}\n            strokeOpacity={1.0}\n            strokeWeight={2}\n          />\n          <Marker\n            position={{\n              lat: activeTrip.destination.point._latitude,\n              lng: activeTrip.destination.point._longitude\n            }}\n          />\n          {renderStopMarkers()}\n          <Marker\n            position={{\n              lat: activeTrip.origin.point._latitude,\n              lng: activeTrip.origin.point._longitude\n            }}\n          />\n        </GoogleMap>\n      ) : (\n        <GoogleMap google={google} initialCenter={ARC} />\n      )}\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: center;\n  padding: 0;\n  height: 100%;\n`;\n\nconst GoogleMap = ({ children = null, ...rest }) => (\n  <Map\n    zoom={11}\n    mapTypeControl={false}\n    streetViewControl={false}\n    fullscreenControl={false}\n    {...rest}\n  >\n    {children}\n  </Map>\n);\n\nexport default GoogleApiWrapper({\n  apiKey: process.env.REACT_APP_MAP_KEY\n})(MapView);\n","import { useState } from 'react';\n\nexport default () => {\n  const [path, setPath] = useState([]);\n\n  const getPathCoords = (activeTrip) => {\n    const initialPath = [\n      {\n        lat: activeTrip.origin.point._latitude,\n        lng: activeTrip.origin.point._longitude\n      },\n      {\n        lat: activeTrip.destination.point._latitude,\n        lng: activeTrip.destination.point._longitude\n      }\n    ];\n    if (activeTrip.stops.length <= 1) {\n      setPath(initialPath);\n    }\n\n    const mergeCoords = async () => {\n      const stopCoords = await activeTrip.stops\n        .filter((rawStop) => rawStop.point !== undefined)\n        .map((stop) => ({\n          lat: stop.point._latitude,\n          lng: stop.point._longitude\n        }));\n\n      setPath([initialPath[0], ...stopCoords, initialPath[1]]);\n    };\n\n    mergeCoords();\n  };\n\n  return [getPathCoords, path];\n};\n","import React from 'react';\nimport moment from 'moment';\nimport styled from 'styled-components';\n\nimport colors from 'constants/colors'\n\nfunction InfoTrip({ activeTrip }) {\n  return (\n    <Container>\n      <p> Destination: {activeTrip.destination.address}</p>\n      <p> Origin: {activeTrip.origin.address}</p>\n      <p> Driver: {activeTrip.driverName}</p>\n      <p> Status: {activeTrip.status}</p>\n      <p>Start Time: {moment(activeTrip.startTime).format('lll')}</p>\n      <p>End Time: {moment(activeTrip.endTime).format('lll')}</p>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  color: white;\n  background: ${colors.jack};\n  padding: 2rem;\n  font-size: .8rem;\n  width: 100%;\n`;\n\nexport default InfoTrip;\n","import React from 'react';\nimport { Modal as AntModal } from 'antd';\nimport {\n  PushpinOutlined,\n  UserSwitchOutlined,\n  TagOutlined,\n  HomeOutlined,\n  ClockCircleOutlined\n} from '@ant-design/icons';\nimport styled from 'styled-components';\nimport moment from 'moment';\n\nconst Price = styled.span`\n  color: ${({ paid }) => (paid ? 'green' : 'tomato')};\n`;\n\nfunction Modal({ visible, onCancel, data }) {\n  if (!data) return null;\n  return (\n    <AntModal\n      title={\n        <span>\n          <PushpinOutlined /> Stop Info\n        </span>\n      }\n      visible={visible}\n      onCancel={onCancel}\n      footer={null}\n    >\n      <p>\n        <UserSwitchOutlined /> {data.userName}\n      </p>\n      <p>\n        <HomeOutlined /> {data.address}\n      </p>\n      <p>\n        <ClockCircleOutlined /> {moment(data.stopTime).format('lll')}\n      </p>\n      <p>\n        <TagOutlined /> <Price paid={data.paid}>{data.price}€</Price>\n      </p>\n    </AntModal>\n  );\n}\n\nexport default Modal;\n","import { message } from 'antd';\n\nconst StopErrorMsg = (msg) => {\n  message.config({\n    top: 100,\n    duration: 2,\n    maxCount: 3,\n    rtl: true,\n  });\n message.error(msg);\n};\n\n\nexport default StopErrorMsg;","export default {\n  img: \"https://avatars2.githubusercontent.com/u/15703165?s=400&u=d08f78e7dd9f1f4dc3e06376cf282173af644c6f&v=4\",\n  link: \"https://github.com/padrisimo\"\n}","import React, { useState, useEffect } from 'react';\n\nimport useStopInfo from 'hooks/useStopInfo';\n\nimport Menu from 'components/Menu';\nimport Logo from 'components/Logo';\nimport Trigger from 'components/Trigger';\nimport Avatar from 'components/Avatar';\nimport {\n  Main,\n  Header,\n  Layout,\n  Aside,\n  AsideContent,\n  Content\n} from 'components/Layout';\nimport MapView from 'components/MapView';\nimport InfoTrip from 'components/InfoTrip';\nimport Modal from 'components/Modal';\nimport StopErrorMsg from 'components/StopErrorMsg';\n\nimport profile from 'constants/profile';\n\nfunction Home({ trips }) {\n  const [collapsed, setCollapsed] = useState(false);\n  const [activeTrip, setActiveTrip] = useState(null);\n  const [stopInfo, setstopInfo] = useState(null);\n  const [getStopInfo, result, errorMessage, clearErrorMessage] = useStopInfo();\n\n  useEffect(() => {\n    if (!result) return;\n    setstopInfo(result);\n  }, [result]);\n\n  useEffect(() => {\n    if (!errorMessage) return;\n    StopErrorMsg(errorMessage);\n    clearErrorMessage();\n  }, [errorMessage]);\n\n  const handleMarkerClick = (stopId) => {\n    if (!stopId) return;\n    getStopInfo(stopId);\n  };\n\n  const toggle = () => {\n    setCollapsed(!collapsed);\n  };\n  return (\n    <Layout>\n      <Aside\n        width={300}\n        collapsedWidth=\"0\"\n        trigger={null}\n        collapsible\n        collapsed={collapsed}\n      >\n        <AsideContent>\n          <div>\n            <Logo>Trips Map</Logo>\n            <Menu trips={trips} selectTrip={setActiveTrip} />\n          </div>\n          {activeTrip && <InfoTrip activeTrip={activeTrip} />}\n        </AsideContent>\n      </Aside>\n      <Main>\n        <Header>\n          <Trigger collapsed={collapsed} onClick={toggle} />\n          <Avatar collapsed={collapsed} img={profile.img} link={profile.link} />\n        </Header>\n        <Content collapsed={collapsed ? 1 : 0}>\n          <Modal\n            visible={!!stopInfo}\n            onCancel={() => setstopInfo(null)}\n            data={stopInfo}\n          />\n          <MapView\n            activeTrip={activeTrip}\n            handleMarkerClick={handleMarkerClick}\n          />\n        </Content>\n      </Main>\n    </Layout>\n  );\n}\n\nexport default Home;\n","import Home from './Home';\n\nexport default Home;\n","import { useState } from 'react';\nimport api from 'api/trips';\nimport { STOP_FAIL } from 'constants/vars';\n\nexport default () => {\n  const [result, setResult] = useState(null);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const getStopInfo = async (stopId) => {\n    try {\n      const response = await api.get(`/stops/${stopId}`);\n\n      setResult(response.data);\n    } catch (error) {\n      setErrorMessage(STOP_FAIL);\n    }\n  };\n\n  const clearErrorMessage = () => {\n    setErrorMessage('');\n  };\n\n  return [getStopInfo, result, errorMessage, clearErrorMessage];\n};\n","import React from 'react';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport colors from \"constants/colors\";\n\nexport default function Spinner() {\n  return (\n    <Container>\n      <LoadingOutlined  spin />\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  font-size: 48px;\n  background: ${colors.darkBlue};\n  color: ${colors.walter};\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;","import React from 'react';\nimport { ApiOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport colors from 'constants/colors';\n\nexport default function ErrorScreen({msg}) {\n  return (\n    <Container>\n      <ApiOutlined style={{fontSize: 48}}/>\n  <p>{msg}</p>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  background: tomato;\n  color: ${colors.walter};\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n","import React, { useContext, useEffect } from 'react';\nimport { Context } from '../context/TripsContext';\n\nimport Home from 'screens/Home';\nimport Spinner from 'screens/Spinner';\nimport ErrorScreen from 'screens/ErrorScreen';\n\nfunction HomeContainer() {\n  const { state, getTripsList } = useContext(Context);\n\n  useEffect(() => {\n    getTripsList();\n  }, []);\n\n  if (state.error) return <ErrorScreen msg={state.error} />;\n\n  if (!state.results || state.loading) return <Spinner />;\n\n  return <Home trips={state.results} />;\n}\n\nexport default HomeContainer;\n","import React from 'react';\nimport 'antd/dist/antd.css';\n\nimport { Provider } from 'context/TripsContext';\nimport HomeContainer from 'containers/HomeContainer';\n\nfunction App() {\n  return <HomeContainer />;\n}\n\nexport default () => (\n  <Provider>\n    <App />\n  </Provider>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}